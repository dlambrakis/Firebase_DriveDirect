{"version":3,"sources":["../src/client.ts","../src/singleton.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\nimport { Database, TypedSupabaseClient } from '@directdrive/core-types';\n\n/**\n * Creates a new Supabase client instance.\n * This function is intended to be used by the singleton initializer.\n * @param supabaseUrl The Supabase project URL.\n * @param supabaseAnonKey The Supabase project anon key.\n */\nexport const createSupabaseClient = (\n  supabaseUrl: string,\n  supabaseAnonKey: string\n): TypedSupabaseClient => {\n  if (!supabaseUrl || !supabaseAnonKey) {\n    throw new Error('Supabase URL or Anon Key was not provided during client creation.');\n  }\n  return createClient<Database>(supabaseUrl, supabaseAnonKey);\n};\n","import { createSupabaseClient } from './client';\nimport type { TypedSupabaseClient } from '@directdrive/core-types';\n\nlet supabase: TypedSupabaseClient | null = null;\n\n/**\n * Initializes the Supabase client singleton.\n * This must be called once at the very start of your application.\n * @param supabaseUrl The Supabase project URL.\n * @param supabaseAnonKey The Supabase project anon key.\n */\nexport const initializeSupabaseSingleton = (\n  supabaseUrl: string,\n  supabaseAnonKey: string\n): TypedSupabaseClient => {\n  if (!supabase) {\n    supabase = createSupabaseClient(supabaseUrl, supabaseAnonKey);\n  }\n  return supabase;\n};\n\n/**\n * Retrieves the singleton instance of the Supabase client.\n * Throws an error if the client has not been initialized first.\n */\nexport const getSupabase = (): TypedSupabaseClient => {\n  if (!supabase) {\n    throw new Error('Supabase client has not been initialized. Call initializeSupabaseSingleton at app startup.');\n  }\n  return supabase;\n};\n"],"mappings":";AAAA,SAAS,oBAAoB;AAStB,IAAM,uBAAuB,CAClC,aACA,oBACwB;AACxB,MAAI,CAAC,eAAe,CAAC,iBAAiB;AACpC,UAAM,IAAI,MAAM,mEAAmE;AAAA,EACrF;AACA,SAAO,aAAuB,aAAa,eAAe;AAC5D;;;ACdA,IAAI,WAAuC;AAQpC,IAAM,8BAA8B,CACzC,aACA,oBACwB;AACxB,MAAI,CAAC,UAAU;AACb,eAAW,qBAAqB,aAAa,eAAe;AAAA,EAC9D;AACA,SAAO;AACT;AAMO,IAAM,cAAc,MAA2B;AACpD,MAAI,CAAC,UAAU;AACb,UAAM,IAAI,MAAM,4FAA4F;AAAA,EAC9G;AACA,SAAO;AACT;","names":[]}