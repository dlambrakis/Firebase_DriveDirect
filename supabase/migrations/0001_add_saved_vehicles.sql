/*
  # Add Saved Vehicles Functionality

  This migration introduces the `saved_vehicles` table to allow users to save listings they are interested in. It also adds a new RLS policy to the existing `vehicle_listings` table. This script is idempotent and can be run multiple times without causing errors.

  1. New Tables
    - `saved_vehicles`
      - `id` (bigint, primary key): The unique identifier for the saved vehicle entry.
      - `user_id` (uuid): Foreign key to `auth.users`, identifying the user who saved the listing.
      - `listing_id` (bigint): Foreign key to `vehicle_listings`, identifying the saved listing.
      - `created_at` (timestamptz): Timestamp of when the listing was saved.

  2. Security
    - Enables RLS on the `saved_vehicles` table.
    - Adds policies to `saved_vehicles` allowing users to view, add, and remove their own saved listings.
    - Adds a new policy to `vehicle_listings` to allow users to delete their own listings.

  3. Changes
    - A unique constraint `user_vehicle_unique` is added to `saved_vehicles` to prevent a user from saving the same listing multiple times.
*/

-- Create the saved_vehicles table if it doesn't exist
CREATE TABLE IF NOT EXISTS public.saved_vehicles (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id uuid NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,
    listing_id bigint NOT NULL REFERENCES public.vehicle_listings(listing_id) ON DELETE CASCADE,
    created_at timestamptz DEFAULT now() NOT NULL,
    CONSTRAINT user_vehicle_unique UNIQUE (user_id, listing_id)
);

-- Enable RLS on the table
ALTER TABLE public.saved_vehicles ENABLE ROW LEVEL SECURITY;

-- Drop and recreate RLS policies for saved_vehicles to ensure idempotency
DROP POLICY IF EXISTS "Users can view their own saved vehicles" ON public.saved_vehicles;
CREATE POLICY "Users can view their own saved vehicles"
ON public.saved_vehicles FOR SELECT
TO authenticated
USING (auth.uid() = user_id);

DROP POLICY IF EXISTS "Users can insert their own saved vehicles" ON public.saved_vehicles;
CREATE POLICY "Users can insert their own saved vehicles"
ON public.saved_vehicles FOR INSERT
TO authenticated
WITH CHECK (auth.uid() = user_id);

DROP POLICY IF EXISTS "Users can delete their own saved vehicles" ON public.saved_vehicles;
CREATE POLICY "Users can delete their own saved vehicles"
ON public.saved_vehicles FOR DELETE
TO authenticated
USING (auth.uid() = user_id);

-- Drop and recreate RLS policy for vehicle_listings to allow deletion
DROP POLICY IF EXISTS "Users can delete their own listings" ON public.vehicle_listings;
CREATE POLICY "Users can delete their own listings"
ON public.vehicle_listings FOR DELETE
TO authenticated
USING (auth.uid() = user_id);
